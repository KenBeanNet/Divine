package xolova.blued00r.divinerpg.client.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelDungeonDemon extends ModelBase
{
    ModelRenderer head;
    ModelRenderer body;
    ModelRenderer rightarm;
    ModelRenderer leftarm;
    ModelRenderer rightleg;
    ModelRenderer leftleg;
    ModelRenderer headp2;
    ModelRenderer headp3;
    ModelRenderer Shape1;
    ModelRenderer Shape2;
    ModelRenderer Shape3;
    ModelRenderer Shape4;
    ModelRenderer Shape5;
    ModelRenderer Shape6;
    ModelRenderer Shape7;
    ModelRenderer Shape8;
    ModelRenderer backplate;
    ModelRenderer restplate;
    ModelRenderer connector;
    ModelRenderer shape9;
    ModelRenderer shape10;
    ModelRenderer Shape11;
    ModelRenderer Shape12;
    ModelRenderer Shape13;
    ModelRenderer Shape14;
    ModelRenderer Shape15;
    ModelRenderer Shape16;

    public ModelDungeonDemon()
    {
        this.textureWidth = 64;
        this.textureHeight = 32;
        this.head = new ModelRenderer(this, 32, 0);
        this.head.addBox(-4.0F, -10.0F, -4.0F, 8, 10, 8);
        this.head.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.head.setTextureSize(64, 32);
        this.head.mirror = true;
        this.setRotation(this.head, 0.0F, 0.0F, 0.0F);
        this.body = new ModelRenderer(this, 16, 16);
        this.body.addBox(-4.0F, 0.0F, -2.0F, 8, 5, 4);
        this.body.setRotationPoint(0.0F, 9.0F, 2.0F);
        this.body.setTextureSize(64, 32);
        this.body.mirror = true;
        this.setRotation(this.body, 0.0F, 0.0F, 0.0F);
        this.rightarm = new ModelRenderer(this, 40, 16);
        this.rightarm.addBox(-3.0F, -2.0F, -2.0F, 4, 12, 4);
        this.rightarm.setRotationPoint(-5.0F, 7.0F, 0.0F);
        this.rightarm.setTextureSize(64, 32);
        this.rightarm.mirror = true;
        this.setRotation(this.rightarm, 0.0F, 0.0F, 0.0F);
        this.leftarm = new ModelRenderer(this, 40, 16);
        this.leftarm.addBox(-1.0F, -2.0F, -2.0F, 4, 12, 4);
        this.leftarm.setRotationPoint(5.0F, 7.0F, 0.0F);
        this.leftarm.setTextureSize(64, 32);
        this.leftarm.mirror = true;
        this.setRotation(this.leftarm, 0.0F, 0.0F, 0.0F);
        this.rightleg = new ModelRenderer(this, 0, 16);
        this.rightleg.addBox(-2.0F, 0.0F, -2.0F, 4, 7, 4);
        this.rightleg.setRotationPoint(-2.0F, 17.0F, 0.0F);
        this.rightleg.setTextureSize(64, 32);
        this.rightleg.mirror = true;
        this.setRotation(this.rightleg, 0.0F, 0.0F, 0.0F);
        this.leftleg = new ModelRenderer(this, 0, 16);
        this.leftleg.addBox(-2.0F, 0.0F, -2.0F, 4, 7, 4);
        this.leftleg.setRotationPoint(2.0F, 17.0F, 0.0F);
        this.leftleg.setTextureSize(64, 32);
        this.leftleg.mirror = true;
        this.setRotation(this.leftleg, 0.0F, 0.0F, 0.0F);
        this.headp2 = new ModelRenderer(this, 0, 0);
        this.headp2.addBox(-5.0F, 0.0F, -4.0F, 10, 5, 8);
        this.headp2.setRotationPoint(0.0F, -10.0F, 0.0F);
        this.headp2.setTextureSize(64, 32);
        this.headp2.mirror = true;
        this.setRotation(this.headp2, (float)Math.PI, 0.0F, 0.0F);
        this.headp3 = new ModelRenderer(this, 0, 0);
        this.headp3.addBox(-5.0F, -5.0F, -4.0F, 10, 5, 8);
        this.headp3.setRotationPoint(0.0F, 5.0F, 0.0F);
        this.headp3.setTextureSize(64, 32);
        this.headp3.mirror = true;
        this.setRotation(this.headp3, 0.0F, 0.0F, 0.0F);
        this.Shape1 = new ModelRenderer(this, 46, 14);
        this.Shape1.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.Shape1.setRotationPoint(0.0F, 4.0F, 4.0F);
        this.Shape1.setTextureSize(64, 32);
        this.Shape1.mirror = true;
        this.setRotation(this.Shape1, 0.0F, 0.0F, -((float)Math.PI / 2F));
        this.Shape2 = new ModelRenderer(this, 46, 14);
        this.Shape2.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.Shape2.setRotationPoint(0.0F, -2.0F, 4.0F);
        this.Shape2.setTextureSize(64, 32);
        this.Shape2.mirror = true;
        this.setRotation(this.Shape2, 0.0F, 0.0F, -((float)Math.PI / 2F));
        this.Shape3 = new ModelRenderer(this, 46, 14);
        this.Shape3.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.Shape3.setRotationPoint(0.0F, 0.0F, 4.0F);
        this.Shape3.setTextureSize(64, 32);
        this.Shape3.mirror = true;
        this.setRotation(this.Shape3, 0.0F, 0.0F, -((float)Math.PI / 2F));
        this.Shape4 = new ModelRenderer(this, 46, 14);
        this.Shape4.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.Shape4.setRotationPoint(0.0F, 2.0F, 4.0F);
        this.Shape4.setTextureSize(64, 32);
        this.Shape4.mirror = true;
        this.setRotation(this.Shape4, 0.0F, 0.0F, -((float)Math.PI / 2F));
        this.Shape5 = new ModelRenderer(this, 46, 14);
        this.Shape5.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.Shape5.setRotationPoint(0.0F, 10.0F, 4.0F);
        this.Shape5.setTextureSize(64, 32);
        this.Shape5.mirror = true;
        this.setRotation(this.Shape5, 0.0F, 0.0F, -((float)Math.PI / 2F));
        this.Shape6 = new ModelRenderer(this, 46, 14);
        this.Shape6.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.Shape6.setRotationPoint(0.0F, 12.0F, 4.0F);
        this.Shape6.setTextureSize(64, 32);
        this.Shape6.mirror = true;
        this.setRotation(this.Shape6, 0.0F, 0.0F, -((float)Math.PI / 2F));
        this.Shape7 = new ModelRenderer(this, 46, 14);
        this.Shape7.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.Shape7.setRotationPoint(0.0F, 8.0F, 4.0F);
        this.Shape7.setTextureSize(64, 32);
        this.Shape7.mirror = true;
        this.setRotation(this.Shape7, 0.0F, 0.0F, -((float)Math.PI / 2F));
        this.Shape8 = new ModelRenderer(this, 46, 14);
        this.Shape8.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.Shape8.setRotationPoint(0.0F, 6.0F, 4.0F);
        this.Shape8.setTextureSize(64, 32);
        this.Shape8.mirror = true;
        this.setRotation(this.Shape8, 0.0F, 0.0F, -((float)Math.PI / 2F));
        this.backplate = new ModelRenderer(this, 16, 16);
        this.backplate.addBox(-4.0F, 0.0F, -2.0F, 8, 12, 4);
        this.backplate.setRotationPoint(0.0F, 5.0F, 0.0F);
        this.backplate.setTextureSize(64, 32);
        this.backplate.mirror = true;
        this.setRotation(this.backplate, 0.0F, 0.0F, 0.0F);
        this.restplate = new ModelRenderer(this, 16, 16);
        this.restplate.addBox(-4.0F, 0.0F, -2.0F, 8, 12, 4);
        this.restplate.setRotationPoint(0.0F, -3.0F, 6.0F);
        this.restplate.setTextureSize(64, 32);
        this.restplate.mirror = true;
        this.setRotation(this.restplate, 0.0F, 0.0F, 0.0F);
        this.connector = new ModelRenderer(this, 16, 16);
        this.connector.addBox(-4.0F, 0.0F, -2.0F, 8, 5, 4);
        this.connector.setRotationPoint(0.0F, 9.0F, 6.0F);
        this.connector.setTextureSize(64, 32);
        this.connector.mirror = true;
        this.setRotation(this.connector, 0.0F, 0.0F, 0.0F);
        this.shape9 = new ModelRenderer(this, 46, 14);
        this.shape9.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.shape9.setRotationPoint(1.0F, -3.0F, 5.0F);
        this.shape9.setTextureSize(64, 32);
        this.shape9.mirror = true;
        this.setRotation(this.shape9, 0.0F, 0.0F, ((float)Math.PI / 2F));
        this.shape10 = new ModelRenderer(this, 46, 14);
        this.shape10.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.shape10.setRotationPoint(1.0F, -1.0F, 5.0F);
        this.shape10.setTextureSize(64, 32);
        this.shape10.mirror = true;
        this.setRotation(this.shape10, 0.0F, 0.0F, ((float)Math.PI / 2F));
        this.Shape11 = new ModelRenderer(this, 46, 14);
        this.Shape11.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.Shape11.setRotationPoint(1.0F, 1.0F, 5.0F);
        this.Shape11.setTextureSize(64, 32);
        this.Shape11.mirror = true;
        this.setRotation(this.Shape11, 0.0F, 0.0F, ((float)Math.PI / 2F));
        this.Shape12 = new ModelRenderer(this, 46, 14);
        this.Shape12.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.Shape12.setRotationPoint(1.0F, 3.0F, 5.0F);
        this.Shape12.setTextureSize(64, 32);
        this.Shape12.mirror = true;
        this.setRotation(this.Shape12, 0.0F, 0.0F, ((float)Math.PI / 2F));
        this.Shape13 = new ModelRenderer(this, 46, 14);
        this.Shape13.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.Shape13.setRotationPoint(1.0F, 5.0F, 5.0F);
        this.Shape13.setTextureSize(64, 32);
        this.Shape13.mirror = true;
        this.setRotation(this.Shape13, 0.0F, 0.0F, ((float)Math.PI / 2F));
        this.Shape14 = new ModelRenderer(this, 46, 14);
        this.Shape14.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.Shape14.setRotationPoint(1.0F, 7.0F, 5.0F);
        this.Shape14.setTextureSize(64, 32);
        this.Shape14.mirror = true;
        this.setRotation(this.Shape14, 0.0F, 0.0F, ((float)Math.PI / 2F));
        this.Shape15 = new ModelRenderer(this, 46, 14);
        this.Shape15.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.Shape15.setRotationPoint(1.0F, 9.0F, 5.0F);
        this.Shape15.setTextureSize(64, 32);
        this.Shape15.mirror = true;
        this.setRotation(this.Shape15, 0.0F, 0.0F, ((float)Math.PI / 2F));
        this.Shape16 = new ModelRenderer(this, 46, 14);
        this.Shape16.addBox(0.0F, 0.0F, 0.0F, 1, 17, 1);
        this.Shape16.setRotationPoint(1.0F, 11.0F, 5.0F);
        this.Shape16.setTextureSize(64, 32);
        this.Shape16.mirror = true;
        this.setRotation(this.Shape16, 0.0F, 0.0F, ((float)Math.PI / 2F));
    }

    /**
     * Sets the models various rotation angles then renders the model.
     */
    public void render(Entity var1, float var2, float var3, float var4, float var5, float var6, float var7)
    {
        super.render(var1, var2, var3, var4, var5, var6, var7);
        this.setRotationAngles(var2, var3, var4, var5, var6, var7);
        this.head.render(var7);
        this.body.render(var7);
        this.rightarm.render(var7);
        this.leftarm.render(var7);
        this.rightleg.render(var7);
        this.leftleg.render(var7);
        this.headp2.render(var7);
        this.headp3.render(var7);
        this.Shape1.render(var7);
        this.Shape2.render(var7);
        this.Shape3.render(var7);
        this.Shape4.render(var7);
        this.Shape5.render(var7);
        this.Shape6.render(var7);
        this.Shape7.render(var7);
        this.Shape8.render(var7);
        this.backplate.render(var7);
        this.restplate.render(var7);
        this.connector.render(var7);
        this.shape9.render(var7);
        this.shape10.render(var7);
        this.Shape11.render(var7);
        this.Shape12.render(var7);
        this.Shape13.render(var7);
        this.Shape14.render(var7);
        this.Shape15.render(var7);
        this.Shape16.render(var7);
    }

    private void setRotation(ModelRenderer var1, float var2, float var3, float var4)
    {
        var1.rotateAngleX = var2;
        var1.rotateAngleY = var3;
        var1.rotateAngleZ = var4;
    }

    public void setRotationAngles(float var1, float var2, float var3, float var4, float var5, float var6)
    {
        this.head.rotateAngleY = var4 / (180F / (float)Math.PI);
        this.head.rotateAngleX = var5 / (180F / (float)Math.PI);
        this.headp2.rotateAngleY = var4 / (180F / (float)Math.PI);
        this.headp2.rotateAngleX = var5 / (180F / (float)Math.PI);
        this.headp3.rotateAngleY = var4 / (180F / (float)Math.PI);
        this.headp3.rotateAngleX = var5 / (180F / (float)Math.PI);
        this.rightarm.rotateAngleX = MathHelper.cos(var1 * 0.6662F + (float)Math.PI) * 2.0F * var2 * 0.5F;
        this.leftarm.rotateAngleX = MathHelper.cos(var1 * 0.6662F) * 2.0F * var2 * 0.5F;
        this.rightarm.rotateAngleZ = 0.0F;
        this.leftarm.rotateAngleZ = 0.0F;
        this.rightleg.rotateAngleX = MathHelper.cos(var1 * 0.6662F) * 1.4F * var2;
        this.leftleg.rotateAngleX = MathHelper.cos(var1 * 0.6662F + (float)Math.PI) * 1.4F * var2;
        this.rightleg.rotateAngleY = 0.0F;
        this.leftleg.rotateAngleY = 0.0F;
        this.rightarm.rotateAngleY = 0.0F;
        this.leftarm.rotateAngleY = 0.0F;
        this.rightarm.rotateAngleZ += MathHelper.cos(var3 * 0.09F) * 0.05F + 0.05F;
        this.leftarm.rotateAngleZ -= MathHelper.cos(var3 * 0.09F) * 0.05F + 0.05F;
        this.rightarm.rotateAngleX += MathHelper.sin(var3 * 0.067F) * 0.05F;
        this.leftarm.rotateAngleX -= MathHelper.sin(var3 * 0.067F) * 0.05F;
    }
}
